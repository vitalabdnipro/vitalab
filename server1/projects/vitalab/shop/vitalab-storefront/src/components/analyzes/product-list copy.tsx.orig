import { useMemo } from "react";
import { Button, Card } from "@components/ui";
import { useStore } from "@lib/context/store-context";
import useProductPrice from "@lib/hooks/use-product-price";

const ProductCard = ({ data }) => {
  const { addItem } = useStore();

  const price = useProductPrice({
    id: data.id,
    variantId: data.variants[0]?.id,
  });
  console.log("price", price);
  const selectedPrice = useMemo(() => {
    const { variantPrice, cheapestPrice } = price;

    return variantPrice || cheapestPrice || null;
  }, [price]);

  const addToCart = (variant: any, quantity = 1) => {
    if (variant) {
      addItem({
        variantId: variant.id,
        quantity,
      });
    }
  };

  return (
    // <Link href={`/analysis/${data.handle}`} passHref>
    <Card className="min-h-[20px] border border-gray-100 transition ease-hover hover:border-gray-300 hover:shadow-md">
      {/* {selectedPrice ? ( */}
        <div className="grid gap-y-2 p-4">
          <div className="flex items-center gap-x-2">
            <div className="text-xs text-gray-400"># {data.handle}</div>
            {selectedPrice && selectedPrice.price_type === "sale" ? (
              <span className="inline-flex items-center rounded bg-orange-100 px-2 py-0.5 text-xs font-medium text-orange-800">
                Акція
              </span>
            ) : (
              <div></div>
            )}
          </div>
          <div className="grid grid-cols-[1fr_150px] gap-x-2">
            <div className="">
              <h4 className="text-sm font-semibold text-slate-800">
                {data.title}
              </h4>
            </div>
            <div className="flex flex-col items-center justify-start">
              {/* {console.log(
              data.title ===
                "Коронавірус (РНК SARS-CoV-2, назо-орофарингеальний зішкріб), методом ПЛР"
                ? data
                : null
            )} */}
              <div className="mb-4 text-lg font-semibold leading-none text-slate-900">
                {selectedPrice && selectedPrice.calculated_price / 100}{" "}
                {selectedPrice && selectedPrice.price_type === "sale" && (
                  <span className="text-gray-300 line-through font-normal">
                    {selectedPrice && selectedPrice.original_price}
                  </span>
                )}{" "}
                грн
              </div>
              <Button
                onClick={() => addToCart(data.variants[0])}
                variant="solid"
              >
                Замовити
              </Button>
            </div>
          </div>
        </div>
      {/* ) : (
        <div>Loading...</div>
      )} */}
    </Card>
    // </Link>
  );
};

const ProductList = ({ analyzes }) => {
  return analyzes.map((item) => {
    return (
      <div key={item.title}>
        <ProductCard data={item} />
      </div>
    );
  });
};

export default ProductList;
